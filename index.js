const { Telegraf, Markup, Scenes, session } = require('telegraf')
const sqlite3 = require('better-sqlite3')
require('dotenv').config()
const bot = new Telegraf(process.env.BOT_TOKEN)
const db = new sqlite3('users.db')

const cancel = [
  ['–û—Ç–º–µ–Ω–∞']
]

db.exec('CREATE TABLE IF NOT EXISTS users (id INT, subDays INT, regDate INT)')
const add = db.prepare('INSERT INTO users (id, subDays, regDate) VALUES (?, ?, ?)')
const get = db.prepare('SELECT * FROM users WHERE id = ?')
const remove = db.prepare('DELETE FROM users WHERE id = ?')
const all = db.prepare('SELECT * FROM users')

var cron = require('node-cron');

// Id: -1001340940569 Title: Diüçë <- –∞–π–¥–∏ –∫–∞–Ω–∞–ª–∞

cron.schedule('* * * * *', () => {
  all.all().forEach(async (user) => {
      let i = user.regDate + (1000 * 60 * 60 * 24 * user.subDays)
      if (Date.now() > i) {
        remove.run(user.id)
        await bot.telegram.sendMessage(user.id, '–°—Ä–æ–∫ –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–∏ –∏—Å—Ç–µ–∫, –∫—É–ø–∏—Ç–µ –∑–∞–Ω–æ–≤–æ')
        awaitbot.telegram.banChatMember(process.env.CHANNEL, user.id)
      }
  });
})
cron.schedule('12 17 * * *', () => {
  all.all().forEach(async (user) => {
    let i = user.regDate + (1000 * 60 * 60 * 24 * user.subDays)
    i = Date.now() - i
    i = i / 1000 / 60 / 60 / 24
    i = Math.abs(Math.floor(i))
    if (i == 0) {
      await bot.telegram.sendMessage(user.id, '–°–µ–≥–æ–¥–Ω—è –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è —Å—Ä–æ–∫ –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–∏')
    } else {
      await bot.telegram.sendMessage(user.id, `–û—Å—Ç–∞–ª–æ—Å—å ${i} –¥–Ω–µ–π –¥–æ –∫–æ–Ω—Ü–∞ –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–∏`)
    }
});
})

const invite = new Scenes.WizardScene('invite',
  async (ctx) => {
    await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –∞–π–¥–∏ —Ç–æ–≥–æ, –∫–æ–≥–æ –Ω–∞–¥–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤ –∫–∞–Ω–∞–ª:', Markup.keyboard(cancel).resize())
    ctx.wizard.next()
  }, async (ctx) => {
    if (ctx.message.text == '–û—Ç–º–µ–Ω–∞') {
      await ctx.reply('–û—Ç–º–µ–Ω–µ–Ω–æ', { reply_markup: { remove_keyboard: true } })
      return ctx.scene.leave()
    }
    try {
      await ctx.tg.getChat(Number(ctx.message.text))
    } catch {
      return await ctx.reply('–£ –±–æ—Ç–∞ –Ω–µ—Ç —á–∞—Ç–∞ —Å —é–∑–µ—Ä–æ–º —Å —Ç–∞–∫–∏–º ID, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π:', Markup.keyboard(cancel).resize())
    }
    ctx.wizard.state.id = Number(ctx.message.text)
    await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –≤—ã–¥–∞–≤–∞–µ–º–æ–π –ø–æ–¥–ø–∏—Å–∫–∏:', Markup.keyboard(cancel).resize())
    ctx.wizard.next()
  }, async (ctx) => {
    if (ctx.message.text == '–û—Ç–º–µ–Ω–∞') {
      await ctx.reply('–û—Ç–º–µ–Ω–µ–Ω–æ', { reply_markup: { remove_keyboard: true } })
      return ctx.scene.leave()
    }
    let days = Number(ctx.message.text)
    if (isNaN(days)) {
      return await ctx.reply('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ:', Markup.keyboard(cancel).resize())
    } else if (days <= 0) {
      return await ctx.reply('–í–≤–¥–∏—Ç–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 0:', Markup.keyboard(cancel).resize())
    }
    add.run(ctx.wizard.state.id, Math.floor(days), Date.now())
    send(ctx.wizard.state.id)
    await ctx.reply('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã—Å–ª–∞–Ω–∞ —Å—Å—ã–ª–∫–∞ —Å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ–º', { reply_markup: { remove_keyboard: true } })
  }
)

const stage = new Scenes.Stage([invite])
bot.use(session())
bot.use(stage.middleware())

bot.start((ctx) => {
    return ctx.reply('Chose your language / –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / –æ–±–µ—Ä—ñ—Ç—å –º–æ–≤—É', {
      ...Markup.inlineKeyboard([
        Markup.button.callback('ENG', 'eng'),
        Markup.button.callback('RU', 'ru'),
        Markup.button.callback('UA', 'ua')
      ])
    })
  })

bot.command('admin', async (ctx, next) => {
  if (process.env.ADMINS.includes(ctx.chat.id)) {
    next()
  }
}, async (ctx) => {
  await ctx.scene.enter('invite')
})

  bot.action('ru', (ctx) => {
    return ctx.reply('–ß—Ç–æ –±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É, –æ—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É', {
      ...Markup.inlineKeyboard([
        Markup.button.callback('–û–§–û–†–ú–ò–¢–¨ –ü–û–î–ü–ò–°–ö–£', 'pay_ru'),
      ])
    })
  })

  bot.action('eng', (ctx) => {
    return ctx.reply('To continue using the channel, buy a subscription', {
      ...Markup.inlineKeyboard([
        Markup.button.callback('BUY A SUBSCRIPTION', 'pay_eng'),
      ])
    })
  })

  bot.action('ua', (ctx) => {
    return ctx.reply('–©–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø –¥–æ –∫–∞–Ω–∞–ª—É –æ–ø–ª–∞—Ç—ñ—Ç—å –ø—ñ–¥–ø–∏—Å–∫—É', {
      ...Markup.inlineKeyboard([
        Markup.button.callback('–û–§–û–†–ú–ò–¢–ò –ü–Ü–î–ü–ò–°–ö–£', 'pay_ua'),
      ])
    })
  })

  bot.action('pay_ua', (ctx) => { 
  return ctx.reply(
		"–û–±–µ—Ä—ñ—Ç—å —Å–ø–æ—Å—ñ–± –æ–ø–ª–∞—Ç–∏",
		Markup.keyboard([
			["–ü—Ä–∏–≤–∞—Ç –±–∞–Ω–∫", "–Ü–Ω—à—ñ —É–∫—Ä–∞—ó–Ω—Å—å–∫—ñ –±–∞–Ω–∫–∏"],
			["–î–æ–ª–∞—Ä–æ–≤–∞ –∫–∞—Ä—Ç–∞ $", "–Ñ–≤—Ä–æ –∫–∞—Ä—Ç–∞ ‚Ç¨"],
			["–û–ø–ª–∞—Ç–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ—é"],
		])
			.oneTime()
			.resize(),
	); 
});

bot.hears("–ü—Ä–∏–≤–∞—Ç –±–∞–Ω–∫", ctx => ctx.reply("–î–æ—Å—Ç—É–ø –≤ –∑–∞–∫—Ä–∏—Ç–∏–π –∫–∞–Ω–∞–ª –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å : 2000 –≥—Ä–Ω\n–†–µ–∫–≤—ñ–∑–∏—Ç–∏ –¥–ª—è –æ–ø–ª–∞—Ç–∏ :\n5168755451995233\n–í—ñ–¥–ø—Ä–∞–≤—Ç–µ —Å–∫—Ä—ñ–Ω—à–æ—Ç –ø—Ä–æ –æ–ø–ª–∞—Ç—É –º–µ–Ω–µ–¥–∂–µ—Ä—É @Dianka43211")); 
bot.hears("–Ü–Ω—à—ñ —É–∫—Ä–∞—ó–Ω—Å—å–∫—ñ –±–∞–Ω–∫–∏", ctx => ctx.reply("–î–æ—Å—Ç—É–ø –≤ –∑–∞–∫—Ä–∏—Ç–∏–π –∫–∞–Ω–∞–ª –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å : 2000 –≥—Ä–Ω\n–†–µ–∫–≤—ñ–∑–∏—Ç–∏ –¥–ª—è –æ–ø–ª–∞—Ç–∏ :\n5168755451995233\n–í—ñ–¥–ø—Ä–∞–≤—Ç–µ —Å–∫—Ä—ñ–Ω—à–æ—Ç –ø—Ä–æ –æ–ø–ª–∞—Ç—É –º–µ–Ω–µ–¥–∂–µ—Ä—É @Dianka43211"));
bot.hears("–î–æ–ª–∞—Ä–æ–≤–∞ –∫–∞—Ä—Ç–∞ $", ctx => ctx.reply("–î–æ—Å—Ç—É–ø –≤ –∑–∞–∫—Ä–∏—Ç–∏–π –∫–∞–Ω–∞–ª –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å : 50 $\n–†–µ–∫–≤—ñ–∑–∏—Ç–∏ –¥–ª—è –æ–ø–ª–∞—Ç–∏ :\n5168752014743069\n–í—ñ–¥–ø—Ä–∞–≤—Ç–µ —Å–∫—Ä—ñ–Ω—à–æ—Ç –ø—Ä–æ –æ–ø–ª–∞—Ç—É –º–µ–Ω–µ–¥–∂–µ—Ä—É @Dianka43211"));
bot.hears("–Ñ–≤—Ä–æ –∫–∞—Ä—Ç–∞ ‚Ç¨", ctx => ctx.reply("–î–æ—Å—Ç—É–ø –≤ –∑–∞–∫—Ä–∏—Ç–∏–π –∫–∞–Ω–∞–ª –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å : 50 ‚Ç¨\n–†–µ–∫–≤—ñ–∑–∏—Ç–∏ –¥–ª—è –æ–ø–ª–∞—Ç–∏ :\n4149499387334806\n–í—ñ–¥–ø—Ä–∞–≤—Ç–µ —Å–∫—Ä—ñ–Ω—à–æ—Ç –ø—Ä–æ –æ–ø–ª–∞—Ç—É –º–µ–Ω–µ–¥–∂–µ—Ä—É @Dianka43211"));
bot.hears("–û–ø–ª–∞—Ç–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ—é", ctx => ctx.reply("–î–æ—Å—Ç—É–ø –≤ –∑–∞–∫—Ä–∏—Ç–∏–π –∫–∞–Ω–∞–ª –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å : 50 USDT\n–†–µ–∫–≤—ñ–∑–∏—Ç–∏ –¥–ª—è –æ–ø–ª–∞—Ç–∏ :\n[USDT adress](https://link.trustwallet.com/send?address=TGdQDbCfLB4h6X7zPQLDuwtK6zNfg74EMn&asset=c195_tTR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t)\n–í—ñ–¥–ø—Ä–∞–≤—Ç–µ —Å–∫—Ä—ñ–Ω—à–æ—Ç –ø—Ä–æ –æ–ø–ª–∞—Ç—É –º–µ–Ω–µ–¥–∂–µ—Ä—É @Dianka43211"));

bot.action('pay_ru', (ctx) => { 
  return ctx.reply(
		"–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã",
		Markup.keyboard([
 			["–ü—Ä–∏–≤–∞—Ç–±–∞–Ω–∫", "–î—Ä—É–≥–∏–µ —É–∫—Ä–∞–∏–Ω—Å–∫–∏–µ –±–∞–Ω–∫–∏"],
			["–î–æ–ª–∞—Ä–æ–≤–∞—è –∫–∞—Ä—Ç–∞ $", "–ï–≤—Ä–æ –∫–∞—Ä—Ç–∞ ‚Ç¨"],
			["–û–ø–ª–∞—Ç–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π"],
		])
			.oneTime()
			.resize(),
	); 
});

bot.hears("–ü—Ä–∏–≤–∞—Ç–±–∞–Ω–∫", ctx => ctx.reply("–î–æ—Å—Ç—É–ø –≤ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª –Ω–∞ –Ω–µ–¥–µ–ª—é : 2000 –≥—Ä–Ω\n–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã :\n5168755451995233\nO—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –ø—Ä–æ –æ–ø–ª–∞—Ç—É –º–µ–Ω–µ–¥–∂–µ—Ä—É @Dianka43211"));
bot.hears("–î—Ä—É–≥–∏–µ —É–∫—Ä–∞–∏–Ω—Å–∫–∏–µ –±–∞–Ω–∫–∏", ctx => ctx.reply("–î–æ—Å—Ç—É–ø –≤ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª –Ω–∞ –Ω–µ–¥–µ–ª—é : 2000 –≥—Ä–Ω\n–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã :\n5168755451995233\–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –ø—Ä–æ –æ–ø–ª–∞—Ç—É –º–µ–Ω–µ–¥–∂–µ—Ä—É @Dianka43211"));
bot.hears("–î–æ–ª–∞—Ä–æ–≤–∞—è –∫–∞—Ä—Ç–∞ $", ctx => ctx.reply("–î–æ—Å—Ç—É–ø –≤ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª –Ω–∞ –Ω–µ–¥–µ–ª—é : 50 $\n–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã :\n5168752014743069\nO—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –ø—Ä–æ –æ–ø–ª–∞—Ç—É –º–µ–Ω–µ–¥–∂–µ—Ä—É @Dianka43211"));
bot.hears("–ï–≤—Ä–æ –∫–∞—Ä—Ç–∞ ‚Ç¨", ctx => ctx.reply("–î–æ—Å—Ç—É–ø –≤ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª –Ω–∞ –Ω–µ–¥–µ–ª—é : 50 ‚Ç¨\n–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã :\n4149499387334806\nO—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –ø—Ä–æ –æ–ø–ª–∞—Ç—É –º–µ–Ω–µ–¥–∂–µ—Ä—É @Dianka43211"));
bot.hears("–û–ø–ª–∞—Ç–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π", ctx => ctx.reply("–î–æ—Å—Ç—É–ø –≤ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª –Ω–∞ –Ω–µ–¥–µ–ª—é : 50 USDT\n–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã :\n[USDT adress](https://link.trustwallet.com/send?address=TGdQDbCfLB4h6X7zPQLDuwtK6zNfg74EMn&asset=c195_tTR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t)\nO—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –ø—Ä–æ –æ–ø–ª–∞—Ç—É –º–µ–Ω–µ–¥–∂–µ—Ä—É @Dianka43211"));

bot.action('pay_eng', (ctx) => { 
  return ctx.reply(
		"Choose payment method",
		Markup.keyboard([
 			["Privat bank", "Other ukrainian banks"],
			["Dollars card $", "Euros cards ‚Ç¨"],
			["Pay by crypto"],
		])
			.oneTime()
			.resize(),
	); 
});

bot.hears("Privat bank", ctx => ctx.reply("Access to closed channel for a week : 2000 UAH\ndetails for payment :\n5168755451995233\nSend a screenshot of the payment to the manager @Dianka43211"));
bot.hears("Other ukrainian banks", ctx => ctx.reply("Access to closed channel for a week : 2000 UAH\ndetails for payment :\n5168755451995233\nSend a screenshot of the payment to the manager @Dianka43211"));
bot.hears("Dollars card $", ctx => ctx.reply("Access to closed channel for a week : 50 $\ndetails for payment :\n5168752014743069\nSend a screenshot of the payment to the manager @Dianka43211"));
bot.hears("Euros cards ‚Ç¨", ctx => ctx.reply("Access to closed channel for a week : 50 ‚Ç¨\ndetails for payment :\n4149499387334806\nSend a screenshot of the payment to the manager @Dianka43211"));
bot.hears("Pay by crypto", ctx => ctx.reply("Access to closed channel for a week : 50 USDT\ndetails for payment :\n[USDT adress](https://link.trustwallet.com/send?address=TGdQDbCfLB4h6X7zPQLDuwtK6zNfg74EMn&asset=c195_tTR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t)\nSend a screenshot of the payment to the manager @Dianka43211"));

bot.on('chat_join_request', async (ctx) => {
  if (ctx.chatJoinRequest.chat.id != process.env.CHANNEL) return
  let i = all.all()
  if (!i.find(user => user.id == ctx.chatJoinRequest.from.id)) return
  ctx.telegram.approveChatJoinRequest(process.env.CHANNEL, ctx.chatJoinRequest.from.id)
})

function send(id) {
  let kb = [
    Markup.button.url('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å', process.env.LINK)
  ]
  bot.telegram.unbanChatMember(process.env.CHANNEL, id)
  bot.telegram.sendMessage(id, `–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –±—ã–ª–∞ –æ–¥–æ–±—Ä–µ–Ω–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ`, Markup.inlineKeyboard(kb))
}

bot.launch()

// Enable graceful stop
process.once('SIGINT', () => bot.stop('SIGINT'))
process.once('SIGTERM', () => bot.stop('SIGTERM'))